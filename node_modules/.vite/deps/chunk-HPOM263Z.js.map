{
  "version": 3,
  "sources": ["../../bootstrap-vue-next/src/utils/dom.ts", "../../bootstrap-vue-next/src/composables/useColorVariantClasses.ts", "../../bootstrap-vue-next/src/components/BSpinner/BSpinner.vue", "../../bootstrap-vue-next/src/composables/useLinkClasses.ts", "../../bootstrap-vue-next/src/components/BLink/BLink.vue", "../../bootstrap-vue-next/src/utils/object.ts", "../../bootstrap-vue-next/src/utils/isLink.ts", "../../bootstrap-vue-next/src/composables/useBLinkHelper.ts", "../../bootstrap-vue-next/src/components/BButton/BButton.vue", "../../bootstrap-vue-next/src/components/BButton/BButtonGroup.vue", "../../bootstrap-vue-next/src/components/BButton/BButtonToolbar.vue", "../../bootstrap-vue-next/src/components/BButton/BCloseButton.vue"],
  "sourcesContent": ["import type {Slot} from 'vue'\n\n/**\n * @deprecated only used in BFormGroup, which is not an SFC... Function could probably be replaced with pure Vue\n */\nexport const attemptFocus = (\n  el: Readonly<HTMLElement>,\n  options: Readonly<FocusOptions> = {}\n): boolean => {\n  const getActiveElement = (excludes: readonly HTMLElement[] = []): Element | null => {\n    const {activeElement} = document\n    return activeElement && !excludes.some((el) => el === activeElement) ? activeElement : null\n  }\n\n  const isActiveElement = (el: Readonly<HTMLElement>): boolean => el === getActiveElement()\n\n  try {\n    el.focus(options)\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e)\n  }\n  return isActiveElement(el)\n}\n\nexport const isEmptySlot = (el: Slot | undefined): boolean => (el?.() ?? []).length === 0\n\n/**\n * @deprecated only used in BFormGroup, which is not an SFC... Function could probably be replaced with pure Vue\n */\nexport const isVisible = (el: Readonly<Element>): boolean => {\n  //if (!isElement(el) || !el.parentNode || !contains(DOCUMENT.body, el)) {\n  // Note this can fail for shadow dom elements since they\n  // are not a direct descendant of document.body\n  //return false\n  //}\n  if (el.getAttribute('display') === 'none') {\n    // We do this check to help with vue-test-utils when using v-show\n    return false\n  }\n  // All browsers support getBoundingClientRect(), except JSDOM as it returns all 0's for values :(\n  // So any tests that need isVisible will fail in JSDOM\n  // Except when we override the getBCR prototype in some tests\n  const bcr = el.getBoundingClientRect()\n  return !!(bcr && bcr.height > 0 && bcr.width > 0)\n}\n\nexport const getTransitionDelay = (element: Readonly<HTMLElement>) => {\n  const style = window.getComputedStyle(element)\n  // if multiple durations are defined, we take the first\n  const transitionDelay = style.transitionDelay.split(',')[0] || ''\n  const transitionDuration = style.transitionDuration.split(',')[0] || ''\n  const transitionDelayMs = Number(transitionDelay.slice(0, -1)) * 1000\n  const transitionDurationMs = Number(transitionDuration.slice(0, -1)) * 1000\n  return transitionDelayMs + transitionDurationMs\n}\n", "import {computed, type MaybeRefOrGetter, toValue} from 'vue'\nimport type {BorderColorVariant, ColorExtendables} from '../types/ColorTypes'\n\nexport const useColorVariantClasses = (\n  obj: MaybeRefOrGetter<ColorExtendables & {borderVariant?: BorderColorVariant | null}>\n) =>\n  computed(() => {\n    let props = toValue(obj)\n    props = {\n      variant: props.variant ?? null,\n      bgVariant: props.bgVariant ?? null,\n      textVariant: props.textVariant ?? null,\n      borderVariant: props.borderVariant ?? null,\n    }\n    return {\n      [`text-bg-${props.variant}`]: props.variant !== null,\n      [`text-${props.textVariant}`]: props.textVariant !== null,\n      [`bg-${props.bgVariant}`]: props.bgVariant !== null,\n      [`border-${props.borderVariant}`]: props.borderVariant !== null,\n    }\n  })\n", "<template>\n  <component\n    :is=\"props.tag\"\n    :class=\"computedClasses\"\n    :role=\"props.label || hasLabelSlot ? props.role : null\"\n    :aria-hidden=\"props.label || hasLabelSlot ? null : true\"\n  >\n    <span v-if=\"props.label || hasLabelSlot\" class=\"visually-hidden\">\n      <slot name=\"label\">{{ props.label }}</slot>\n    </span>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from 'vue'\nimport type {BSpinnerProps} from '../../types/ComponentProps'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\n\nconst _props = withDefaults(defineProps<BSpinnerProps>(), {\n  label: undefined,\n  role: 'status',\n  small: false,\n  tag: 'span',\n  type: 'border',\n  variant: null,\n})\n\nconst props = useDefaults(_props, 'BSpinner')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  label?: (props: Record<string, never>) => any\n}>()\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    textVariant: props.variant,\n  }))\n)\nconst computedClasses = computed(() => [\n  `spinner-${props.type}`,\n  colorClasses.value,\n  {\n    [`spinner-${props.type}-sm`]: props.small,\n  },\n])\n\nconst hasLabelSlot = computed(() => !isEmptySlot(slots.label))\n</script>\n", "import {computed, type MaybeRefOrGetter, toValue} from 'vue'\nimport type {\n  LinkIconProps,\n  LinkOpacityProps,\n  LinkUnderlineProps,\n  LinkVariantProps,\n} from '../types/ComponentProps'\n\nexport const useLinkClasses = (\n  linkProps: MaybeRefOrGetter<\n    LinkUnderlineProps & LinkOpacityProps & LinkIconProps & LinkVariantProps\n  >\n) =>\n  computed(() => {\n    const props = toValue(linkProps)\n    return {\n      [`link-${props.variant}`]: props.variant !== null,\n      [`link-opacity-${props.opacity}`]: props.opacity !== undefined,\n      [`link-opacity-${props.opacityHover}-hover`]: props.opacityHover !== undefined,\n      [`link-underline-${props.underlineVariant}`]: props.underlineVariant !== null,\n      [`link-offset-${props.underlineOffset}`]: props.underlineOffset !== undefined,\n      [`link-offset-${props.underlineOffsetHover}-hover`]: props.underlineOffsetHover !== undefined,\n      ['link-underline']:\n        props.underlineVariant === null &&\n        (props.underlineOpacity !== undefined || props.underlineOpacityHover !== undefined),\n      [`link-underline-opacity-${props.underlineOpacity}`]: props.underlineOpacity !== undefined,\n      [`link-underline-opacity-${props.underlineOpacityHover}-hover`]:\n        props.underlineOpacityHover !== undefined,\n      'icon-link': props.icon === true,\n    }\n  })\n", "<template>\n  <component\n    :is=\"tag\"\n    v-if=\"tag === 'router-link'\"\n    v-slot=\"//@ts-ignore \n    {href: localHref, navigate, isActive, isExactActive}\"\n    v-bind=\"routerAttr\"\n    custom\n  >\n    <component\n      :is=\"props.routerTag\"\n      :href=\"localHref\"\n      :target=\"props.target\"\n      :class=\"{\n        [defaultActiveClass]: props.active,\n        [props.activeClass]: isActive,\n        [props.exactActiveClass]: isExactActive,\n      }\"\n      v-bind=\"$attrs\"\n      @click=\";[navigate($event), clicked($event)]\"\n    >\n      <slot />\n    </component>\n  </component>\n  <component :is=\"tag\" v-else :class=\"computedLinkClasses\" v-bind=\"routerAttr\" @click=\"clicked\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useLinkClasses} from '../../composables/useLinkClasses'\nimport type {BLinkProps} from '../../types/ComponentProps'\nimport {collapseInjectionKey, navbarInjectionKey} from '../../utils/keys'\nimport {computed, getCurrentInstance, inject, useAttrs} from 'vue'\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst _props = withDefaults(defineProps<BLinkProps>(), {\n  active: undefined,\n  activeClass: 'router-link-active',\n  disabled: false,\n  exactActiveClass: 'router-link-exact-active',\n  href: undefined,\n  icon: false,\n  opacity: undefined,\n  opacityHover: undefined,\n  // noPrefetch: {type: Boolean, default: false},\n  // prefetch: {type: Boolean, default: null},\n  rel: undefined,\n  replace: false,\n  routerComponentName: 'router-link',\n  routerTag: 'a',\n  stretched: false,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: null,\n  variant: null,\n})\nconst props = useDefaults(_props, 'BLink')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n}>()\n\nconst attrs = useAttrs()\n\nconst collapseData = inject(collapseInjectionKey, null)\nconst navbarData = inject(navbarInjectionKey, null)\n\nconst instance = getCurrentInstance()\n\nconst defaultActiveClass = 'active'\n\nconst tag = computed(() => {\n  const routerName = props.routerComponentName\n    .split('-')\n    .map((e) => e.charAt(0).toUpperCase() + e.slice(1))\n    .join('')\n  const hasRouter = instance?.appContext.app.component(routerName) !== undefined\n  if (!hasRouter || props.disabled || !props.to) {\n    return 'a'\n  }\n  return props.routerComponentName\n})\n\nconst computedHref = computed(() => {\n  const toFallback = '#'\n  if (props.href) return props.href\n\n  if (typeof props.to === 'string') return props.to || toFallback\n\n  const {to} = props\n\n  if (to !== undefined && 'path' in to) {\n    const path = to.path || ''\n    const query = to.query\n      ? `?${Object.keys(to.query)\n          .map((e) => `${e}=${to.query?.[e]}`)\n          .join('=')}`\n      : ''\n    const hash = !to.hash || to.hash.charAt(0) === '#' ? to.hash || '' : `#${to.hash}`\n    return `${path}${query}${hash}` || toFallback\n  }\n  // There is no resolver for `RouteLocationNamedRaw`. Which, I'm not sure there can be one in this context.\n\n  return toFallback\n})\n\n/**\n * Not to be confused with computedLinkClasses\n */\nconst linkValueClasses = useLinkClasses(props)\nconst computedClasses = computed(() => [\n  linkValueClasses.value,\n  {\n    'stretched-link': props.stretched === true,\n  },\n])\n\nconst routerAttr = computed(() => ({\n  'class': computedClasses.value,\n  'to': props.to,\n  'replace': props.replace,\n  'href': computedHref.value,\n  'target': props.target,\n  'rel': props.target === '_blank' ? (props.rel ?? 'noopener') : undefined,\n  'tabindex': props.disabled ? '-1' : typeof attrs.tabindex === 'undefined' ? null : attrs.tabindex,\n  'aria-disabled': props.disabled ? true : null,\n}))\n\nconst computedLinkClasses = computed(() => ({\n  [defaultActiveClass]: props.active,\n  disabled: props.disabled,\n}))\n\nconst clicked = (e: Readonly<MouseEvent>): void => {\n  if (props.disabled) {\n    e.preventDefault()\n    e.stopImmediatePropagation()\n    return\n  }\n\n  if (\n    (collapseData?.isNav?.value === true && navbarData === null) ||\n    (navbarData !== null && navbarData.autoClose?.value === true)\n  ) {\n    collapseData?.hide?.()\n  }\n\n  emit('click', e)\n}\n</script>\n", "/**\n * Removes properties from an object, based on the values in an array, and returns the new object.\n * Equivalent to an object version of TS Omit<>\n */\nexport const omit = <\n  A extends Record<PropertyKey, unknown>,\n  const B extends ReadonlyArray<PropertyKey>,\n>(\n  objToPluck: Readonly<A>,\n  keysToPluck: Readonly<B> | readonly (keyof A)[]\n): Omit<A, B[number]> =>\n  Object.keys(objToPluck)\n    .filter((key) => !keysToPluck.map((el) => el.toString()).includes(key))\n    .reduce((result, key) => ({...result, [key]: objToPluck[key]}), {} as Omit<A, B[number]>)\n\n/**\n * Picks properties from an object, base on the values in an array, and returns the new object.\n * Equivalent to an object version of TS Pick<>\n */\nexport const pick = <\n  A extends Record<PropertyKey, unknown>,\n  const B extends ReadonlyArray<PropertyKey>,\n>(\n  objToPluck: Readonly<A>,\n  keysToPluck: Readonly<B> | readonly (keyof A)[]\n): Pick<A, B[number]> =>\n  [...keysToPluck].reduce(\n    (memo, prop) => {\n      memo[prop] = objToPluck[prop]\n      return memo\n    },\n    {} as Record<PropertyKey, unknown>\n  ) as Pick<A, B[number]>\n\n/**\n * Dynamically get a nested value from an array or\n * object with a string.\n *\n * @example get(person, 'friends[0].name')\n *\n * Thanks to\n * @link https://github.com/rayepps/radash/blob/master/src/object.ts#L214\n */\nexport const get = <TDefault = unknown>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any,\n  path: string,\n  defaultValue?: Readonly<TDefault>\n): TDefault => {\n  const segments = path.split(/[.[\\]]/g)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let current: any = value\n  for (const key of segments) {\n    if (current === null) return defaultValue as TDefault\n    if (current === undefined) return defaultValue as TDefault\n    if (key.trim() === '') continue\n    current = current[key]\n  }\n  if (current === undefined) return defaultValue as TDefault\n  return current\n}\n\n/**\n * Opposite of get, dynamically set a nested value into\n * an object using a key path. Does not modify the given\n * initial object.\n *\n * @example\n * set({}, 'name', 'ra') // => { name: 'ra' }\n * set({}, 'cards[0].value', 2) // => { cards: [{ value: 2 }] }\n *\n * Thanks to\n * @link https://github.com/rayepps/radash/blob/master/src/object.ts#L214\n */\nexport const set = <T extends object, K>(initial: T, path: string, value: K): T => {\n  const clone = <T>(obj: T): T => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const isPrimitive = (value: any): boolean =>\n      value === undefined ||\n      value === null ||\n      (typeof value !== 'object' && typeof value !== 'function')\n    // Primitive values do not need cloning.\n    if (isPrimitive(obj)) {\n      return obj\n    }\n\n    if (typeof obj === 'function') {\n      return obj.bind({})\n    }\n\n    const newObj = new ((obj as object).constructor as {new (): T})()\n\n    // Assign the props.\n    Object.getOwnPropertyNames(obj).forEach((prop) => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ;(newObj as any)[prop] = (obj as any)[prop]\n    })\n\n    return newObj\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const toInt = <T extends number | null = number>(value: any, defaultValue?: T): number | T => {\n    const def = defaultValue === undefined ? 0 : defaultValue\n    if (value === null || value === undefined) {\n      return def\n    }\n    const result = Number.parseInt(value)\n    return Number.isNaN(result) ? def : result\n  }\n\n  if (!initial) return {} as T\n  if (!path || value === undefined) return initial\n  const segments = path.split(/[.[\\]]/g).filter((x) => !!x.trim())\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const _set = (node: any) => {\n    if (segments.length > 1) {\n      const key = segments.shift() as string\n      const nextIsNum = toInt(segments[0], null) === null ? false : true\n      node[key] = node[key] === undefined ? (nextIsNum ? [] : {}) : node[key]\n      _set(node[key])\n    } else {\n      node[segments[0]] = value\n    }\n  }\n  const cloned = clone(initial)\n  _set(cloned)\n  return cloned\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const deepEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== 'object' || a === null || typeof b !== 'object' || b === null) {\n    return false\n  }\n\n  const keysA = Object.keys(a),\n    keysB = Object.keys(b)\n\n  if (keysA.length !== keysB.length) {\n    return false\n  }\n\n  for (const key of keysA) {\n    if (!keysB.includes(key) || !deepEqual(a[key], b[key])) {\n      return false\n    }\n  }\n\n  return true\n}\n", "import type {RouteLocationRaw} from 'vue-router'\n\nexport const isLink = (props: Readonly<{href?: string; to?: RouteLocationRaw}>): boolean =>\n  !!(props.href || props.to)\n", "import {computed, type MaybeRefOrGetter, readonly, toRef} from 'vue'\nimport {isLink} from '../utils/isLink'\nimport {pick} from '../utils/object'\n\nexport const useBLinkHelper = <\n  T extends Record<string, unknown>,\n  const B extends ReadonlyArray<PropertyKey>,\n>(\n  props: MaybeRefOrGetter<T>,\n  pickProps?: MaybeRefOrGetter<B | (keyof T)[]>\n) => {\n  const pickPropsResolved = readonly(toRef(pickProps))\n  const resolvedProps = readonly(toRef(props))\n\n  const computedLink = computed(() => isLink(resolvedProps.value))\n  const computedLinkProps = computed(() =>\n    computedLink.value\n      ? pick(\n          resolvedProps.value,\n          pickPropsResolved.value ?? [\n            'active',\n            'activeClass',\n            'append',\n            'href',\n            'rel',\n            'replace',\n            'routerComponentName',\n            'target',\n            'to',\n            'variant',\n            'opacity',\n            'opacityHover',\n            'underlineVariant',\n            'underlineOffset',\n            'underlineOffsetHover',\n            'underlineOpacity',\n            'underlineOpacityHover',\n          ]\n        )\n      : {}\n  )\n\n  return {computedLink, computedLinkProps}\n}\n", "<template>\n  <component\n    :is=\"computedTag\"\n    ref=\"element\"\n    class=\"btn\"\n    v-bind=\"linkProps\"\n    :class=\"computedClasses\"\n    :aria-disabled=\"computedAriaDisabled\"\n    :aria-pressed=\"isToggle ? pressedValue : null\"\n    :autocomplete=\"isToggle ? 'off' : null\"\n    :disabled=\"isButton ? props.disabled : null\"\n    :href=\"props.href\"\n    :rel=\"computedLink ? props.rel : null\"\n    :role=\"nonStandardTag || computedLink ? 'button' : null\"\n    :target=\"computedLink ? props.target : null\"\n    :type=\"isButton ? props.type : null\"\n    :to=\"!isButton ? props.to : null\"\n    @click=\"clicked\"\n  >\n    <template v-if=\"props.loading\">\n      <slot name=\"loading\">\n        <template v-if=\"!props.loadingFill\">\n          {{ props.loadingText }}\n        </template>\n        <slot name=\"loading-spinner\">\n          <BSpinner\n            :small=\"props.size !== 'lg'\"\n            :label=\"props.loadingFill ? props.loadingText : undefined\"\n          />\n        </slot>\n      </slot>\n    </template>\n    <template v-else>\n      <slot />\n    </template>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, ref} from 'vue'\nimport BSpinner from '../BSpinner/BSpinner.vue'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport BLink from '../BLink/BLink.vue'\nimport {useLinkClasses} from '../../composables/useLinkClasses'\nimport {onKeyStroke} from '@vueuse/core'\nimport type {BButtonProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {ColorVariant} from '../../types/ColorTypes'\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'loading'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'loading-spinner'?: (props: Record<string, never>) => any\n}>()\n\nconst _props = withDefaults(defineProps<Omit<BButtonProps, 'pressed'>>(), {\n  loading: false,\n  loadingFill: false,\n  loadingText: 'Loading...',\n  pill: false,\n  size: 'md',\n  squared: false,\n  tag: 'button',\n  type: 'button',\n  // Link props\n  active: false, // Why is this active: false?\n  variant: 'secondary',\n  // All others use defaults\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  stretched: false,\n  href: undefined,\n  icon: false,\n  opacity: undefined,\n  opacityHover: undefined,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  routerTag: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: null,\n  // End link props\n})\n\nconst props = useDefaults(_props, 'BButton')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n}>()\n\nconst element = ref<HTMLElement | null>(null)\n\nconst pressedValue = defineModel<BButtonProps['pressed']>('pressed', {default: undefined})\n\nconst {computedLink, computedLinkProps} = useBLinkHelper(props, [\n  'active-class',\n  'exact-active-class',\n  'replace',\n  'routerComponentName',\n  'routerTag',\n])\n\nconst isToggle = computed(() => typeof pressedValue.value === 'boolean')\nconst isButton = computed(\n  () => props.tag === 'button' && props.href === undefined && props.to === undefined\n)\nconst isBLink = computed(() => props.to !== undefined)\nconst nonStandardTag = computed(() => (props.href !== undefined ? false : !isButton.value))\n\nconst linkProps = computed(() => (isBLink.value ? computedLinkProps.value : []))\nconst computedAriaDisabled = computed(() => {\n  if (props.href === '#' && props.disabled) return true\n\n  return nonStandardTag.value ? props.disabled : null\n})\n\nconst variantIsLinkType = computed(() => props.variant?.startsWith('link') || false)\nconst variantIsLinkTypeSubset = computed(() => props.variant?.startsWith('link-') || false)\nconst linkValueClasses = useLinkClasses(\n  computed(() => ({\n    ...(variantIsLinkType.value && {\n      icon: props.icon,\n      opacity: props.opacity,\n      opacityHover: props.opacityHover,\n      underlineOffset: props.underlineOffset,\n      underlineOffsetHover: props.underlineOffsetHover,\n      underlineOpacity: props.underlineOpacity,\n      underlineOpacityHover: props.underlineOpacityHover,\n      underlineVariant: props.underlineVariant,\n      variant:\n        variantIsLinkTypeSubset.value === true ? (props.variant?.slice(5) as ColorVariant) : null,\n    }),\n  }))\n)\nconst computedClasses = computed(() => [\n  variantIsLinkType.value === true && computedLink.value === false\n    ? linkValueClasses.value\n    : undefined,\n  [`btn-${props.size}`],\n  {\n    [`btn-${props.variant}`]: props.variant !== null && variantIsLinkTypeSubset.value === false,\n    'active': props.active || pressedValue.value,\n    'rounded-pill': props.pill,\n    'rounded-0': props.squared,\n    'disabled': props.disabled,\n  },\n])\n\nconst computedTag = computed(() => (isBLink.value ? BLink : props.href ? 'a' : props.tag))\n\nconst clicked = (e: Readonly<MouseEvent>): void => {\n  if (props.disabled) {\n    e.preventDefault()\n    e.stopPropagation()\n    return\n  }\n  emit('click', e)\n  if (isToggle.value) pressedValue.value = !pressedValue.value\n}\n\nonKeyStroke(\n  [' ', 'enter'],\n  (e) => {\n    if (props.href === '#') {\n      e.preventDefault()\n      element.value?.click()\n    }\n  },\n  {target: element}\n)\n</script>\n", "<template>\n  <component :is=\"props.tag\" :class=\"computedClasses\" role=\"group\" :aria-label=\"props.ariaLabel\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BButtonGroupProps} from '../../types/ComponentProps'\nimport {computed, provide} from 'vue'\nimport {buttonGroupKey} from '../../utils/keys'\n\nprovide(buttonGroupKey, true)\n\nconst _props = withDefaults(defineProps<BButtonGroupProps>(), {\n  ariaLabel: 'Group',\n  size: 'md',\n  tag: 'div',\n  vertical: false,\n})\nconst props = useDefaults(_props, 'BButtonGroup')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedClasses = computed(() => ({\n  'btn-group': !props.vertical,\n  [`btn-group-${props.size}`]: props.size !== 'md',\n  'btn-group-vertical': props.vertical,\n}))\n</script>\n", "<template>\n  <div\n    :class=\"computedClasses\"\n    class=\"btn-toolbar\"\n    :role=\"props.role\"\n    :aria-label=\"props.ariaLabel\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BButtonToolbarProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\n\nconst _props = withDefaults(defineProps<BButtonToolbarProps>(), {\n  ariaLabel: 'Group',\n  justify: false,\n  role: 'toolbar',\n})\nconst props = useDefaults(_props, 'BButtonToolbar')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedClasses = computed(() => ({\n  'justify-content-between': props.justify,\n}))\n</script>\n", "<template>\n  <button\n    :type=\"props.type\"\n    class=\"btn-close\"\n    :disabled=\"props.disabled\"\n    :aria-label=\"props.ariaLabel\"\n    @click=\"emit('click', $event)\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BCloseButtonProps} from '../../types/ComponentProps'\n\nconst _props = withDefaults(defineProps<BCloseButtonProps>(), {\n  ariaLabel: 'Close',\n  disabled: false,\n  type: 'button',\n})\nconst props = useDefaults(_props, 'BCloseButton')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n}>()\n</script>\n"],
  "mappings": "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",
  "names": ["el", "_useSlots", "value", "_useModel", "BLink"]
}
